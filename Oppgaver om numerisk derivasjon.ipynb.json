{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Oppgave 7.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pylab import *\n",
    "e = 2.718 #Dette er ca. hva eulertallet er\n",
    "\n",
    "def N(t): \n",
    "    return (0.2*e**t)+90\n",
    "\n",
    "def derivert(N, t, dt):\n",
    "    return (N(t + dt) - N(t))/dt\n",
    "\n",
    "antall = []\n",
    "endringen = []\n",
    "tid = []    #år\n",
    "\n",
    "for i in range(11):\n",
    "    tid.append(i)\n",
    "    antall.append(N(i))\n",
    "    endringen.append(derivert(N, i, 10**-8))\n",
    "\n",
    "\n",
    "plot(tid, antall)\n",
    "plot(tid, endringen)\n",
    "legend([\"antall planter\", \"endringen av antall planter\"])\n",
    "show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Oppgave 7.9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "temperaturen synker med 69.80918037433543 ved element 42\n"
     ]
    }
   ],
   "source": [
    "# a)\n",
    "\n",
    "e = 2.718\n",
    "def T(t):\n",
    "    return 70*(e**(-0.065*t))\n",
    "\n",
    "def derivert(N, t, dt):\n",
    "    return (N(t + dt) - N(t))/dt\n",
    "\n",
    "tid = []\n",
    "temperaturder = []\n",
    "temperatur = []\n",
    "\n",
    "for i in range(0,6001):\n",
    "    x = i/1000\n",
    "    tid.append(x)\n",
    "    temperaturder.append(derivert(T, x, 10**-8))\n",
    "    temperatur.append(T(x))\n",
    "\n",
    "# b)\n",
    "\n",
    "plot(tid, temperaturder)\n",
    "plot(tid, temperatur)\n",
    "legend([\"temperaturendringen\", \"temperatur\"])\n",
    "show()\n",
    "\n",
    "#Den koden ble litt... meh\n",
    "\n",
    "# c)\n",
    "\n",
    "print(f\"temperaturen synker med {temperatur[42]} ved element 42\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "oppgave 7.12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pylab import *\n",
    "\n",
    "data = loadtxt(\"posisjon.txt\", skiprows = 1)\n",
    "tid = data[:,0]\n",
    "posisjon = data[:,1]\n",
    "fart = []\n",
    "aks = []\n",
    "\n",
    "for i in range(len(tid)-1):\n",
    "    dy = posisjon[i+1]-posisjon[i]\n",
    "    dx = tid[i+1]-tid[i]\n",
    "    der = dy/dx\n",
    "    fart.append(der)\n",
    "\n",
    "for i in range(len(tid)-2):\n",
    "    dy = fart[i+1]-fart[i]\n",
    "    dx = tid[i+1]-tid[i]\n",
    "    der = dy/dx\n",
    "    aks.append(der)\n",
    "    \n",
    "plot(tid, posisjon)\n",
    "plot(tid[:-1], fart)\n",
    "plot(tid[:-2], aks)\n",
    "\n",
    "legend([\"Posisjon\",\"Fart\",\"Akselerasjon\"])\n",
    "xlabel(\"Tid\")\n",
    "show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "rektangel-metoden"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12.0\n"
     ]
    }
   ],
   "source": [
    "def f(x):\n",
    "    return x + 2\n",
    "\n",
    "def integralet(f, a, b, N):\n",
    "    A = 0\n",
    "    dx = (b - a)/N\n",
    "    for i in range(N):\n",
    "        A = A + f(a + i*dx)*dx\n",
    "    return A\n",
    "\n",
    "print(integralet(f, 1, 4, 3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "oppgave 7.13"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13.495500000000002\n"
     ]
    }
   ],
   "source": [
    "def f(x):\n",
    "    return x + 2\n",
    "\n",
    "def integralet(f, a, b, N):\n",
    "    A = 0\n",
    "    dx = (b - a)/N\n",
    "    for i in range(N):\n",
    "        A = A + f(a + i*dx)*dx\n",
    "    return A\n",
    "\n",
    "print(integralet(f, 1, 4, 1000))\n",
    "\n",
    "#Vi har regnet ut integralet for f(x), hvor svaret ble 13,5\n",
    "\n",
    "#Og som du ser under, vil rektangelmetoden gi et svar tilnærmet 13,5\n",
    "\n",
    "#Tegningen får du dessverre ikke sett"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "oppgave 7.14"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5.0\n"
     ]
    }
   ],
   "source": [
    "def f(x):\n",
    "    return x**2 - 4*x + 5\n",
    "\n",
    "def integralet(f, a, b, N):\n",
    "    A = 0\n",
    "    dx = (b - a)/N\n",
    "    for i in range(N):\n",
    "        A = A + f(a + i*dx)*dx\n",
    "    return A\n",
    "\n",
    "print(integralet(f, 1, 4, 3))\n",
    "\n",
    "\n",
    "#Gidder ikke skrive ned alle funksjonene, så vi byttet bare ut de første et par ganger\n",
    "# + Dette er bare for x-verdiene 1 til 4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Teoridel\n",
    "\n",
    "Analytisk derivasjon er når du bruker formler for å regne ut derivasjon\n",
    "Numerisk derivasjon er når du finner en tilnærmet verdi ved å bruke verdier tilnærmet 0 eller uendelig.... tror jeg?\n",
    "\n",
    "Ved numerisk integrasjon prøver man å finne arealet under en funksjon mellom to x verdier, for eksempel ved å bruke rektangelmetoden. Men det finnes også andre måter og gjøre det på.\n",
    "\n",
    "Tilnærmingene varierer med dx fordi den skal være så liten så mulig for å få en så nøyaktig som mulig verdi, og med N av samme grunn, men den skal være så høy som mulig. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
